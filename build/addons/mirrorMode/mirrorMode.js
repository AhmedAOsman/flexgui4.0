function mirrorModeService(a,b,c,d,e,f,g,h,i){var j={isEnabled:!1,setEnabled:function(b){this.isEnabled=b,this.isEnabled?(this.password=(Math.floor(9e3*Math.random())+1e3).toString(),g.post(a.flexguiSettings.expertUrl+"/api/viewerapi",{Pass:this.password,Image:"",Enabled:!0}).success(function(a,b,c,d){a.id&&(j.viewerId=a.id,j.captureScreen(),j.getMouseAction())})):(g.post(a.flexguiSettings.expertUrl+"/api/viewerapi",{Pass:this.password,Image:"",Enabled:!0,Id:this.viewerId}),delete this.viewerId)},password:null,getMousePos:function(a){return void 0==a?{x:event.clientX,y:event.clientY}:a.center},onScreenTap:function(a){if(j.isEnabled){var b=j.getMousePos(a);j.setLastMouseAction(b)}},viewerId:null,compression:localStorage.getItem("fgViewerCompression")||.5,saveCompression:function(){localStorage.setItem("fgViewerCompression",j.compression)},captureScreen:function(){j.capturePromise&&j.$timeout.cancel(j.capturePromise),j.captureStart=(new Date).getTime(),html2canvas(document.body,{onrendered:function(b){var c={w:$(window).width(),h:$(window).height()},d=document.createElement("canvas").getContext("2d");d.canvas.width=c.w,d.canvas.height=c.h,d.drawImage(b,0,0);var e=d.canvas.toDataURL("image/jpeg",j.compression);if(j.previousScreen!=e&&(j.previousScreen=e,g.post(a.flexguiSettings.expertUrl+"/api/viewerapi",{Id:j.viewerId,Enabled:!0,Pass:j.password,Image:e})),j.isEnabled){var f=1e3-((new Date).getTime()-j.captureStart);j.capturePromise=j.$timeout(j.captureScreen,Math.max(f,0))}else delete j.capturePromise}})},lastMouseAction:null,mouseActionTimeout:null,getMouseActionPromise:null,getMouseAction:function(){if(j.isEnabled){j.getMouseActionPromise&&c.cancel(j.getMouseActionPromise);var b=new Date;g.post(a.flexguiSettings.expertUrl+"/api/viewerapi",{Id:j.viewerId,Enabled:!0,Pass:j.password}).success(function(a){a.click&&(j.lastMouseAction=a.click,j.mouseActionTimeout&&clearTimeout(j.mouseActionTimeout),j.mouseActionTimeout=setTimeout(function(){j.lastMouseAction=null},4e3)),j.getMouseActionPromise=c(j.getMouseAction,Math.max(0,1e3-(new Date-b)))})}},setLastMouseAction:function(a){j.isEnabled&&(j.lastMouseAction=a,j.mouseActionTimeout&&clearTimeout(j.mouseActionTimeout),j.mouseActionTimeout=setTimeout(function(){j.lastMouseAction=null},4e3))},init:function(a){}};i.add("images/hand.png",a.addonServerUrl+"addons/mirrorMode/");var k=angular.element("#body").scope();return $("#body").append(h('<img class="touchPointer" ng-src="{{icons.get(\'images/hand.png\')}}" style="z-index: 9999; top: {{mirrorMode.lastMouseAction.y}}px; left: {{mirrorMode.lastMouseAction.x - 30}}px;" ng-if="mirrorMode.lastMouseAction" />')(k)),f.settings.mirrorMode={"for":localization.currentLocal.help.mirrorMode.header,source:a.addonServerUrl+"addons/mirrorMode/views/help/mirrorMode.html"},a.settingsTabs.mirrorMode={help:f.settings.mirrorMode,position:10,source:a.addonServerUrl+"addons/mirrorMode/views/settings/mirror.html",title:localization.currentLocal.settings.tabs.mirror.title},a.settingsTabs.addons.children.push(a.settingsTabs.mirrorMode),a.mirrorMode=j,a.mirrorMode.$timeout=c,a.$watch(function(){return b.initDone},function(){j.init(b)}),a.$watch(function(){return d.lastMouseAction},function(){j.setLastMouseAction(d.lastMouseAction)}),j}mirrorModeService.$inject=["$rootScope","deviceService","$timeout","editorService","variableService","helpService","$http","$compile","iconService"];